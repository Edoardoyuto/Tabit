document.addEventListener("DOMContentLoaded", () => {
    // ÂÆöÊúüÁöÑ„Å´„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÇíÊõ¥Êñ∞
    updateDashboard();
    setInterval(updateTimeOnly, 1000); // 1Áßí„Åî„Å®„Å´ÊªûÂú®ÊôÇÈñì„ÅÆ„ÅøÊõ¥Êñ∞
    updateTabListDropdown();

  
    // ÂÑ™ÂÖàURL„É™„Çπ„Éà„ÇíË™≠„ÅøËæº„ÇÄ
    loadPriorityUrls();

    // „Çø„Éñ‰∏ÄË¶ß„Çí„Éâ„É≠„ÉÉ„Éó„ÉÄ„Ç¶„É≥„Å´Êõ¥Êñ∞
    function updateTabListDropdown() {
        chrome.tabs.query({}, tabs => {
            const dropdown = document.getElementById("tabListDropdown");
            dropdown.innerHTML = '<option value="">„Çø„Éñ„ÇíÈÅ∏Êäû</option>';

            tabs.forEach(tab => {
                let option = document.createElement("option");
                option.value = tab.url;
                option.textContent = tab.title || tab.url;
                dropdown.appendChild(option);
            });
        });
    }

    // Èñã„ÅÑ„Å¶„ÅÑ„Çã„Çø„Éñ„Åã„ÇâÈÅ∏Êäû„Åó„Å¶ÂÑ™ÂÖàURL„Å´ËøΩÂä†
    document.getElementById("addFromTabsButton").addEventListener("click", () => {
        const dropdown = document.getElementById("tabListDropdown");
        const selectedUrl = dropdown.value;
        if (selectedUrl) {
            chrome.storage.local.get(["priorityUrls"], data => {
                let urls = data.priorityUrls || [];
                if (!urls.includes(selectedUrl)) {
                    urls.push(selectedUrl);
                    chrome.storage.local.set({ priorityUrls: urls }, () => {
                        chrome.runtime.sendMessage({ action: "updatePriorityUrls", urls });
                        loadPriorityUrls();
                    });
                }
            });
        }
    });

    // Èñ≤Ë¶ßÊôÇÈñìÈ†Ü„ÇΩ„Éº„Éà
    document.getElementById("sortByElapsedTimeButton").addEventListener("click", () => {
      chrome.runtime.sendMessage({ action: "sortByElapsedTimeRequest" }, (response) => {
        if (chrome.runtime.lastError) {
          console.error("‚ùå „ÇΩ„Éº„Éà„É™„ÇØ„Ç®„Çπ„ÉàÈÄÅ‰ø°„Ç®„É©„Éº:", chrome.runtime.lastError);
        } else {
          console.log("‚úÖ „ÇΩ„Éº„Éà„É™„ÇØ„Ç®„Çπ„ÉàÈÄÅ‰ø°ÊàêÂäü:", response);
        }
      });
    });

  document.getElementById("groupTabsButton").addEventListener("click", () => {
        chrome.runtime.sendMessage({ action: "groupTabsAutomatically" });
  });

    document.getElementById("ungroupTabsButton").addEventListener("click", () => {
        chrome.runtime.sendMessage({ action: "ungroupTabs" }, () => {
            console.log("„Çø„Éñ„ÅÆ„Ç∞„É´„Éº„ÉóËß£Èô§„É™„ÇØ„Ç®„Çπ„ÉàÈÄÅ‰ø°ÂÆå‰∫Ü");
        });
    });

    
    // Èñã„ÅÑ„ÅüÊôÇÈñìÈ†Ü„ÇΩ„Éº„Éà
    document.getElementById("sortByOpenTimeButton").addEventListener("click", () => {
      chrome.runtime.sendMessage({ action: "sortByOpenTimeRequest" }, (response) => {
        if (chrome.runtime.lastError) {
          console.error("‚ùå „ÇΩ„Éº„Éà„É™„ÇØ„Ç®„Çπ„ÉàÈÄÅ‰ø°„Ç®„É©„Éº:", chrome.runtime.lastError);
        } else {
          console.log("‚úÖ „ÇΩ„Éº„Éà„É™„ÇØ„Ç®„Çπ„ÉàÈÄÅ‰ø°ÊàêÂäü:", response);
        }
      });
    });
  
    // ÂÑ™ÂÖàURL„ÇíËøΩÂä†
    document.getElementById("addPriorityUrlButton").addEventListener("click", () => {
      const input = document.getElementById("priorityUrlInput");
      const newUrl = input.value.trim();
      if (newUrl) {
        chrome.storage.local.get(["priorityUrls"], data => {
          const urls = data.priorityUrls || [];
          if (!urls.includes(newUrl)) {
            urls.push(newUrl);
            chrome.storage.local.set({ priorityUrls: urls }, () => {
              chrome.runtime.sendMessage({ action: "updatePriorityUrls", urls });
              input.value = "";
              loadPriorityUrls();
            });
          }
        });
      }
    });
  });
  
  // „É°„ÉÉ„Çª„Éº„Ç∏Âèó‰ø°„É™„Çπ„Éä„Éº
  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    console.log("üì© Âèó‰ø°„Åó„Åü„É°„ÉÉ„Çª„Éº„Ç∏:", message);
    if (message.action === "updateDashboard") {
      console.log("üîÑ „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÊõ¥Êñ∞„É™„ÇØ„Ç®„Çπ„Éà„ÇíÂèó‰ø°");
      updateDashboard();
      sendResponse({ status: "ok" });
    }
  });
  
  // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÅÆË°®Á§∫„ÇíÊõ¥Êñ∞
  function updateDashboard() {
    chrome.storage.local.get(["tabElapsedTimes", "tabOpenTimes", "tabTitles"], data => {
      const elapsedTimes = data.tabElapsedTimes || {};
      const openTimes = data.tabOpenTimes || {};
      const titles = data.tabTitles || {};

        chrome.tabs.query({}, tabs => {
            // „Çø„Éñ„ÅÆÁèæÂú®„ÅÆÈ†ÜÂ∫è„ÇíÂèñÂæó
            const tabOrder = tabs.map(tab => tab.id.toString());

      // „ÉÜ„Éº„Éñ„É´„ÅÆ tbody „Çí„ÇØ„É™„Ç¢
      const tableBody = document.getElementById("timeTable");
      tableBody.innerHTML = "";
  
            // „Çø„ÉñID„ÅÆÈ†ÜÂ∫è„Åß‰∏¶„ÅπÁõ¥„Åó
            tabOrder.forEach(tabId => {
                if (!elapsedTimes[tabId]) return; // Ë®òÈå≤„Åå„Å™„ÅÑ„Çø„Éñ„ÅØ„Çπ„Ç≠„ÉÉ„Éó

                const tr = document.createElement("tr");
                tr.dataset.tabId = tabId; // „Çø„ÉñID„Çí„Éá„Éº„ÇøÂ±ûÊÄß„Å´Ë®≠ÂÆö
                const titleTd = document.createElement("td");
                const timeTd = document.createElement("td");
                const openTimeTd = document.createElement("td");

                titleTd.textContent = titles[tabId] || "(No Title)";
                timeTd.id = `time-${tabId}`; // ÊªûÂú®ÊôÇÈñìÁî®„ÅÆID„ÇíË®≠ÂÆö
                timeTd.textContent = formatTime(elapsedTimes[tabId] || 0);

                if (openTimes[tabId]) {
                    const dateObj = new Date(openTimes[tabId]);
                    openTimeTd.textContent = dateObj.toLocaleTimeString();
                } else {
                    openTimeTd.textContent = "N/A";
                }

                tr.appendChild(titleTd);
                tr.appendChild(timeTd);
                tr.appendChild(openTimeTd);
                tableBody.appendChild(tr);
            });
            updateTimeOnly(); // ÊªûÂú®ÊôÇÈñìÊõ¥Êñ∞
        });
      
    });
}

// ÊôÇÈñì„Çí„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åô„ÇãÈñ¢Êï∞
function formatTime(milliseconds) {
    let totalSeconds = Math.floor(milliseconds / 1000);
    let hours = Math.floor(totalSeconds / 3600);
    let minutes = Math.floor((totalSeconds % 3600) / 60);
    let seconds = totalSeconds % 60;

    if (hours > 0) {
        return `${hours} ÊôÇÈñì ${minutes} ÂàÜ`;
    } else if (minutes > 0) {
        return `${minutes} ÂàÜ ${seconds} Áßí`;
    } else {
        return `${seconds} Áßí`;
    }
}

// **1Áßí„Åî„Å®„Å´ÊªûÂú®ÊôÇÈñì„ÅÆ„ÅøÊõ¥Êñ∞**
function updateTimeOnly() {
    chrome.storage.local.get(["tabElapsedTimes"], data => {
        let elapsedTimes = data.tabElapsedTimes || {}; // „Çπ„Éà„É¨„Éº„Ç∏„Åã„ÇâÂèñÂæó
        const currentTime = Date.now();

        // ÁèæÂú®„ÅÆ„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Çø„Éñ„ÇíÂèñÂæóÔºàÈùûÂêåÊúüÂá¶ÁêÜ„ÅÆ‰∏≠„ÅßÂÆüË°åÔºâ
        chrome.tabs.query({ active: true, currentWindow: true }, tabs => {
            const activeTabId = tabs.length > 0 ? tabs[0].id.toString() : null;

            let updated = false; // „Çπ„Éà„É¨„Éº„Ç∏Êõ¥Êñ∞Âà§ÂÆö

            Object.keys(elapsedTimes).forEach(tabId => {
                const timeTd = document.getElementById(`time-${tabId}`);

                if (timeTd) {
                    // **ÊªûÂú®ÊôÇÈñì„ÇíÊõ¥Êñ∞**
                    let elapsedTime = elapsedTimes[tabId] || 0;
                    if (tabId === activeTabId) {
                        elapsedTime += 1000; // 1ÁßíÂ¢ó„ÇÑ„Åô
                        elapsedTimes[tabId] = elapsedTime; // „Éá„Éº„Çø„ÇíÊõ¥Êñ∞
                        updated = true;
                    }
                    timeTd.textContent = formatTime(elapsedTime);
                }
            });

            // **Â§âÊõ¥„Åå„ÅÇ„Å£„ÅüÂ†¥Âêà„ÅÆ„Åø„Çπ„Éà„É¨„Éº„Ç∏„Å´‰øùÂ≠ò**
            if (updated) {
                chrome.storage.local.set({ tabElapsedTimes: elapsedTimes }, () => {
                });
            }
        });
    });
}
  
  // ÂÑ™ÂÖàURL„É™„Çπ„Éà„ÇíË™≠„ÅøËæº„Çì„ÅßË°®Á§∫
  function loadPriorityUrls() {
    chrome.storage.local.get(["priorityUrls"], data => {
      const urls = data.priorityUrls || [];
      const list = document.getElementById("priorityUrlList");
      list.innerHTML = "";
  
      urls.forEach(url => {
        const li = document.createElement("li");
        li.textContent = url;
  
        const removeButton = document.createElement("button");
        removeButton.textContent = "ÂâäÈô§";
        removeButton.addEventListener("click", () => removePriorityUrl(url));
  
        li.appendChild(removeButton);
        list.appendChild(li);
      });
    });
  }
  
  // ÂÑ™ÂÖàURL„ÇíÂâäÈô§
  function removePriorityUrl(urlToRemove) {
    chrome.storage.local.get(["priorityUrls"], data => {
      let urls = data.priorityUrls || [];
      urls = urls.filter(url => url !== urlToRemove);
  
      chrome.storage.local.set({ priorityUrls: urls }, () => {
        chrome.runtime.sendMessage({ action: "updatePriorityUrls", urls });
        loadPriorityUrls();
      });
    });
  }
  
